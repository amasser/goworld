package geometry

func Cube() *VertexArray {
    vao := CreateVertexArray()
    vao.Length = 36
    vao.Bind()

    vbo := CreateVertexBuffer()
    vbo.Buffer(cubeVerticesTex)

    return vao
}

func VoxelVertices(x, y, z uint8, xp, xn, yp, yn, zp, zn uint16) {
}
var cubeVerticesTex = FloatBuffer{
	//  X, Y, Z, U, V
	// Bottom
    0.0, 0.0, 0.0, 0.0, 0.0, // Back Left: Bottom Left
    1.0, 0.0, 0.0, 1.0, 0.0, // Back Right: Bottom Right
    0.0, 0.0, 1.0, 0.0, 1.0, // Front Left: Top Left
    1.0, 0.0, 0.0, 1.0, 0.0, // Back Right: Bottom Right
    1.0, 0.0, 1.0, 1.0, 1.0, // Front Right: Top Right
    0.0, 0.0, 1.0, 0.0, 1.0, // Front Left: Top Left

	// Top
	0.0, 1.0, 0.0, 0.0, 0.0,
	0.0, 1.0, 1.0, 0.0, 1.0,
	1.0, 1.0, 0.0, 1.0, 0.0,
	1.0, 1.0, 0.0, 1.0, 0.0,
	0.0, 1.0, 1.0, 0.0, 1.0,
	1.0, 1.0, 1.0, 1.0, 1.0,

	// Front
	-1.0, -1.0, 1.0, 1.0, 0.0,
	1.0, -1.0, 1.0, 0.0, 0.0,
	-1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, -1.0, 1.0, 0.0, 0.0,
	1.0, 1.0, 1.0, 0.0, 1.0,
	-1.0, 1.0, 1.0, 1.0, 1.0,

	// Back
	-1.0, -1.0, -1.0, 0.0, 0.0,
	-1.0, 1.0, -1.0, 0.0, 1.0,
	1.0, -1.0, -1.0, 1.0, 0.0,
	1.0, -1.0, -1.0, 1.0, 0.0,
	-1.0, 1.0, -1.0, 0.0, 1.0,
	1.0, 1.0, -1.0, 1.0, 1.0,

	// Left
	-1.0, -1.0, 1.0, 0.0, 1.0,
	-1.0, 1.0, -1.0, 1.0, 0.0,
	-1.0, -1.0, -1.0, 0.0, 0.0,
	-1.0, -1.0, 1.0, 0.0, 1.0,
	-1.0, 1.0, 1.0, 1.0, 1.0,
	-1.0, 1.0, -1.0, 1.0, 0.0,

	// Right
	1.0, -1.0, 1.0, 1.0, 1.0,
	1.0, -1.0, -1.0, 1.0, 0.0,
	1.0, 1.0, -1.0, 0.0, 0.0,
	1.0, -1.0, 1.0, 1.0, 1.0,
	1.0, 1.0, -1.0, 0.0, 0.0,
	1.0, 1.0, 1.0, 0.0, 1.0,
}

var cubeVertices = FloatBuffer {
	//  X, Y, Z, U, V
	// Bottom
	-1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
	1.0, -1.0, -1.0, 1.0, -1.0, -1.0,
	-1.0, -1.0, 1.0, -1.0, -1.0, 1.0,
	1.0, -1.0, -1.0, 1.0, -1.0, -1.0,
	1.0, -1.0, 1.0, 1.0, -1.0, 1.0,
	-1.0, -1.0, 1.0, -1.0, -1.0, 1.0,

	// Top
	-1.0, 1.0, -1.0, -1.0, 1.0, -1.0,
	-1.0, 1.0, 1.0, -1.0, 1.0, 1.0,
	1.0, 1.0, -1.0, 1.0, 1.0, -1.0,
	1.0, 1.0, -1.0, 1.0, 1.0, -1.0,
	-1.0, 1.0, 1.0, -1.0, 1.0, 1.0,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0,

	// Front
	-1.0, -1.0, 1.0, -1.0, -1.0, 1.0,
	1.0, -1.0, 1.0, 1.0, -1.0, 1.0,
	-1.0, 1.0, 1.0, -1.0, 1.0, 1.0,
	1.0, -1.0, 1.0, 1.0, -1.0, 1.0,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	-1.0, 1.0, 1.0, -1.0, 1.0, 1.0,

	// Back
	-1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
	-1.0, 1.0, -1.0, -1.0, 1.0, -1.0,
	1.0, -1.0, -1.0, 1.0, -1.0, -1.0,
	1.0, -1.0, -1.0, 1.0, -1.0, -1.0,
	-1.0, 1.0, -1.0, -1.0, 1.0, -1.0,
	1.0, 1.0, -1.0, 1.0, 1.0, -1.0,

	// Left
	-1.0, -1.0, 1.0, -1.0, -1.0, 1.0,
	-1.0, 1.0, -1.0, -1.0, 1.0, -1.0,
	-1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
	-1.0, -1.0, 1.0, -1.0, -1.0, 1.0,
	-1.0, 1.0, 1.0, -1.0, 1.0, 1.0,
	-1.0, 1.0, -1.0, -1.0, 1.0, -1.0,

	// Right
	1.0, -1.0, 1.0, 1.0, -1.0, 1.0,
	1.0, -1.0, -1.0, 1.0, -1.0, -1.0,
	1.0, 1.0, -1.0, 1.0, 1.0, -1.0,
	1.0, -1.0, 1.0, 1.0, -1.0, 1.0,
	1.0, 1.0, -1.0, 1.0, 1.0, -1.0,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
}
